<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Simopticon: /home/runner/work/Simopticon/Simopticon/src/optimizer/montecarlo/MonteCarlo.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Simopticon
   &#160;<span id="projectnumber">1.1.0</span>
   </div>
   <div id="projectbrief">A framework for the optimization of simulation parameters.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('MonteCarlo_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MonteCarlo.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="MonteCarlo_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @file</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * In this file, the implementation of the MonteCarlo optimizer class is defined.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * @author Burkhard Hensel</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <a class="code" href="MonteCarlo_8h.xhtml" title="In this file, the header of the MonteCarlo class is defined.">&quot;MonteCarlo.h&quot;</a></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;../../controller/ValueMap.h&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&quot;../../parameters/ContinuousParameter.h&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">memory</span><span class="preprocessor">&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#</span><span class="preprocessor">include</span> <span class="preprocessor">&lt;</span><span class="preprocessor">fstream</span><span class="preprocessor">&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">   15</a></span>&#160;<a class="code" href="classMonteCarlo.xhtml">MonteCarlo</a>::<a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">MonteCarlo</a>(<a class="code" href="classController.xhtml">Controller</a> &amp;ctrl, <span class="keyword">const</span> std::list&lt;std::shared_ptr&lt;ParameterDefinition&gt;&gt; &amp;params,</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                       nlohmann::json config) : <a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">Optimizer</a>(<a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">ctrl</a>, <a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">params</a>),</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                                                <a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">stopCon</a>(<a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">StoppingCondition</a>(<a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">config</a>.<a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">at</a>(<span class="stringliteral">&quot;stopCon&quot;</span>))),</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                                                <a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">trackProgress</a>(<a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">config</a>.<a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">at</a>(<span class="stringliteral">&quot;outputProgress&quot;</span>)),</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                                                <a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">parallelTrials</a>(<a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">config</a>.<a class="code" href="classMonteCarlo.xhtml#a251648293ec7f4324272f15b8958c7cf">at</a>(<span class="stringliteral">&quot;evaluations&quot;</span>)) {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classMonteCarlo.xhtml#aaaf6b6307206d858b5bf38e584ef640a">   22</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classMonteCarlo.xhtml">MonteCarlo</a>::<a class="code" href="classMonteCarlo.xhtml#aaaf6b6307206d858b5bf38e584ef640a">runOptimization</a>() {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    stopCon.setStartNow();</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    size_t evaluations = 0;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="Types_8h.xhtml#aa12a140bd1c79b30f8aa5311b12f13cc">functionValue</a> bestValue = <a class="code" href="classOptimizer.xhtml#a2442b637e285b98eb30e1266986bbe3e">getValueMap</a>().getTopVals().front().second;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classMonteCarlo.xhtml#ade76b2809944c2e160beef4e0ac6e9a7">trackProgress</a>) {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <a class="code" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">saveProgress</a><a class="code" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">(</a>bestValue<a class="code" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">,</a> evaluations<a class="code" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">)</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="comment">// set random seed for reproducible results</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment">// NOTE: Separate random number generators would be better if there are different positions in Simopticon where</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment">// random numbers are used. This is currently (2023-12-07) not the case.</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    srand(1234); <span class="comment">// NOLINT(*-msc51-cpp)</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">while</span> (!aborted &amp;&amp; stopCon.evaluate(evaluations, bestValue)) {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        std::list&lt;parameterCombination&gt; paramList;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="comment">// approach taken from parameterNormalizer::denormalize()</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classMonteCarlo.xhtml#a472ced8271f2ed6fe7d1883dbccfb99b">parallelTrials</a>; i++) {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            <span class="keyword">auto</span> *pcomb = <span class="keyword">new</span> parameterCombination();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">const</span> std::shared_ptr&lt;ParameterDefinition&gt; &amp;pdef: parameters) {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                <span class="keywordtype">double</span> rand_relative = (<span class="keywordtype">double</span>) rand() / RAND_MAX; <span class="comment">// NOLINT(*-msc50-cpp)</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                std::shared_ptr&lt;Parameter&gt; newParam(</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                        <span class="keyword">new</span> ContinuousParameter(pdef, (coordinate) rand_relative * (pdef-&gt;getMax() - pdef-&gt;getMin()) +</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                                      pdef-&gt;getMin()));</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                pcomb-&gt;push_back(newParam);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            paramList.push_back(*pcomb);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        std::map&lt;parameterCombination, functionValue&gt; values = requestValues(paramList);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        bestValue = <a class="code" href="classOptimizer.xhtml#a2442b637e285b98eb30e1266986bbe3e">getValueMap</a>().getTopVals().front().second;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="classMonteCarlo.xhtml#ad1f097f06b9f460646914be4e9e93905">lastEvaluations</a> = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> parameterCombination &amp;comb: paramList) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            lastEvaluations += std::to_string(values[comb]) + <span class="stringliteral">&quot;; &quot;</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="comment">// update counters</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <a class="code" href="classMonteCarlo.xhtml#a3ddd7d62c0b08b03245d5c4408f6d5af">iterations</a>++;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        evaluations = <a class="code" href="classOptimizer.xhtml#a2442b637e285b98eb30e1266986bbe3e">getValueMap</a>().getSize();</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        evaluations += <a class="code" href="classMonteCarlo.xhtml#a472ced8271f2ed6fe7d1883dbccfb99b">parallelTrials</a>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classMonteCarlo.xhtml#ade76b2809944c2e160beef4e0ac6e9a7">trackProgress</a>) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <a class="code" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">saveProgress</a><a class="code" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">(</a>bestValue<a class="code" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">,</a> evaluations<a class="code" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">)</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">   71</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classMonteCarlo.xhtml">MonteCarlo</a>::<a class="code" href="classMonteCarlo.xhtml#aca39d1154afe8b605dd084f3e1c463d1">saveProgress</a>(<a class="code" href="Types_8h.xhtml#aa12a140bd1c79b30f8aa5311b12f13cc">functionValue</a> bestVal, size_t evaluations) <span class="keyword">const</span> {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">static</span> std::ofstream out;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">if</span> (!out.is_open()) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">if</span> (!std::filesystem::exists(<span class="stringliteral">&quot;results/progress.csv&quot;</span>)) {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            std::filesystem::create_directories(<span class="stringliteral">&quot;results&quot;</span>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        out.open(<span class="stringliteral">&quot;results/progress.csv&quot;</span>, std::ios::out | std::ios::trunc);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        out &lt;&lt; <span class="stringliteral">&quot;Iteration;&quot;</span> &lt;&lt; <span class="stringliteral">&quot;Evaluations;&quot;</span> &lt;&lt; <span class="stringliteral">&quot;Minimum\n&quot;</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    out &lt;&lt; iterations &lt;&lt; <span class="stringliteral">&quot;;&quot;</span> &lt;&lt; evaluations &lt;&lt; <span class="stringliteral">&quot;;&quot;</span> &lt;&lt; bestVal &lt;&lt; std::endl;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classMonteCarlo.xhtml#afe129cb363946c359ac23a26e4db66be">   83</a></span>&#160;std::string <a class="code" href="classMonteCarlo.xhtml">MonteCarlo</a>::<a class="code" href="classMonteCarlo.xhtml#afe129cb363946c359ac23a26e4db66be">getName</a>() {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;Monte-Carlo&quot;</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classMonteCarlo.xhtml#a4f345e54af196a71a332ffa3082a6bc6">   87</a></span>&#160;std::string <a class="code" href="classMonteCarlo.xhtml">MonteCarlo</a>::<a class="code" href="classMonteCarlo.xhtml#a4f345e54af196a71a332ffa3082a6bc6">getStatus</a>() {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    std::string status = <span class="stringliteral">&quot;Iterations:\t\t\t&quot;</span> + std::to_string(<a class="code" href="classMonteCarlo.xhtml#a3ddd7d62c0b08b03245d5c4408f6d5af">iterations</a>) + <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    status += <span class="stringliteral">&quot;Iterations without improvement:\t&quot;</span> + std::to_string(stopCon.getIterationsSinceImprov()) + <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    status += <span class="stringliteral">&quot;Last evaluations: &quot;</span> + <a class="code" href="classMonteCarlo.xhtml#ad1f097f06b9f460646914be4e9e93905">lastEvaluations</a> + <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    status += <span class="stringliteral">&quot;Best evaluations: &quot;</span>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordtype">int</span> counter = 0;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;val: getValueMap().getTopVals()) {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        status += std::to_string(val.second) + <span class="stringliteral">&quot;; &quot;</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        counter++;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">if</span> (counter == 4)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> status;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classMonteCarlo.xhtml#a91f7297753288824473b17c495174c9f">  102</a></span>&#160;std::string <a class="code" href="classMonteCarlo.xhtml">MonteCarlo</a>::<a class="code" href="classMonteCarlo.xhtml#a91f7297753288824473b17c495174c9f">getStatusBar</a>() {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;Optimizer running...&quot;</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.xhtml">home</a></li><li class="navelem"><a class="el" href="dir_1036706e55c22cab35bc1c58ee689f1d.xhtml">runner</a></li><li class="navelem"><a class="el" href="dir_629f8151d55d307162ff2d619fb1783d.xhtml">work</a></li><li class="navelem"><a class="el" href="dir_d752a507578ac67cb89fc42fea488c92.xhtml">Simopticon</a></li><li class="navelem"><a class="el" href="dir_d52ba758f150d691552c4ae8701aa21e.xhtml">Simopticon</a></li><li class="navelem"><a class="el" href="dir_d60bff54a8563e68d2216c43d85b14c6.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_73384fdeffbbc95c2842eb1d043b1e8b.xhtml">optimizer</a></li><li class="navelem"><a class="el" href="dir_e11eeec074eae8a341f2ac4839b2cc72.xhtml">montecarlo</a></li><li class="navelem"><a class="el" href="MonteCarlo_8cpp.xhtml">MonteCarlo.cpp</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
