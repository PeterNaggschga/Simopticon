<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Simopticon: Multithreaded&lt; Key, T, Compare, Allocator &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Simopticon
   &#160;<span id="projectnumber">1.1.0</span>
   </div>
   <div id="projectbrief">A framework for the optimization of simulation parameters.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classMultithreaded.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="classMultithreaded-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Multithreaded&lt; Key, T, Compare, Allocator &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__utils.xhtml">utils</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>A class implementing concurrent execution of the same function for different arguments.  
 <a href="classMultithreaded.xhtml#details">More...</a></p>

<p><code>#include &quot;<a class="el" href="Multithreaded_8h_source.xhtml">Multithreaded.h</a>&quot;</code></p>
<div class="dynheader">
Inheritance diagram for Multithreaded&lt; Key, T, Compare, Allocator &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMultithreaded__inherit__graph.svg" width="503" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Collaboration diagram for Multithreaded&lt; Key, T, Compare, Allocator &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMultithreaded__coll__graph.svg" width="194" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abb856a33aad9a1cc76a91c15c40bef8e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMultithreaded.xhtml#abb856a33aad9a1cc76a91c15c40bef8e">Multithreaded</a> (unsigned int threads)</td></tr>
<tr class="memdesc:abb856a33aad9a1cc76a91c15c40bef8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMultithreaded.xhtml" title="A class implementing concurrent execution of the same function for different arguments.">Multithreaded</a> class that does not use more than the given number of threads.  <a href="classMultithreaded.xhtml#abb856a33aad9a1cc76a91c15c40bef8e">More...</a><br /></td></tr>
<tr class="separator:abb856a33aad9a1cc76a91c15c40bef8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a1fcc1c0642faa664e11fefadde148b5f"><td class="memItemLeft" align="right" valign="top">virtual std::map&lt; Key, T, Compare, Allocator &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMultithreaded.xhtml#a1fcc1c0642faa664e11fefadde148b5f">runMultithreadedFunctions</a> (std::set&lt; Key, Compare &gt; runs)</td></tr>
<tr class="memdesc:a1fcc1c0642faa664e11fefadde148b5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes given tasks into <a class="el" href="classMultithreaded.xhtml#af18b358906f0dd910122e6541c46f45e" title="ThreadsafeQueue containing the arguments that have to be processed by the ThreadPool.">queue</a>, creates concurrent threads and merges them when execution is done.  <a href="classMultithreaded.xhtml#a1fcc1c0642faa664e11fefadde148b5f">More...</a><br /></td></tr>
<tr class="separator:a1fcc1c0642faa664e11fefadde148b5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a417daf5d214dc7046af294dba9979624"><td class="memItemLeft" align="right" valign="top">virtual std::map&lt; Key, T, Compare, Allocator &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMultithreaded.xhtml#a417daf5d214dc7046af294dba9979624">multithreadFunction</a> ()</td></tr>
<tr class="memdesc:a417daf5d214dc7046af294dba9979624"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that is executed by each thread.  <a href="classMultithreaded.xhtml#a417daf5d214dc7046af294dba9979624">More...</a><br /></td></tr>
<tr class="separator:a417daf5d214dc7046af294dba9979624"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:af49cb7239ee452d7c1d29ae50fe482a3"><td class="memItemLeft" align="right" valign="top">const unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMultithreaded.xhtml#af49cb7239ee452d7c1d29ae50fe482a3">NR_THREADS</a></td></tr>
<tr class="memdesc:af49cb7239ee452d7c1d29ae50fe482a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum number of concurrent threads to be used in ThreadPool.  <a href="classMultithreaded.xhtml#af49cb7239ee452d7c1d29ae50fe482a3">More...</a><br /></td></tr>
<tr class="separator:af49cb7239ee452d7c1d29ae50fe482a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af18b358906f0dd910122e6541c46f45e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classThreadsafeQueue.xhtml">ThreadsafeQueue</a>&lt; Key &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMultithreaded.xhtml#af18b358906f0dd910122e6541c46f45e">queue</a></td></tr>
<tr class="memdesc:af18b358906f0dd910122e6541c46f45e"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classThreadsafeQueue.xhtml" title="A container class of a queue that is safe for concurrent access of different threads.">ThreadsafeQueue</a> containing the arguments that have to be processed by the ThreadPool.  <a href="classMultithreaded.xhtml#af18b358906f0dd910122e6541c46f45e">More...</a><br /></td></tr>
<tr class="separator:af18b358906f0dd910122e6541c46f45e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a295f1db64506dc4054dc5d7bac9ba231"><td class="memItemLeft" align="right" valign="top">virtual T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMultithreaded.xhtml#a295f1db64506dc4054dc5d7bac9ba231">work</a> (Key arg)=0</td></tr>
<tr class="memdesc:a295f1db64506dc4054dc5d7bac9ba231"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that should be executed concurrently on different arguments.  <a href="classMultithreaded.xhtml#a295f1db64506dc4054dc5d7bac9ba231">More...</a><br /></td></tr>
<tr class="separator:a295f1db64506dc4054dc5d7bac9ba231"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class Key, class T, class Compare = std::less&lt;Key&gt;, class Allocator = std::allocator&lt;std::pair&lt;const Key, T&gt;&gt;&gt;<br />
class Multithreaded&lt; Key, T, Compare, Allocator &gt;</h3>

<p>A class implementing concurrent execution of the same function for different arguments. </p>
<p>The function must be implemented through <a class="el" href="classMultithreaded.xhtml#a295f1db64506dc4054dc5d7bac9ba231" title="Function that should be executed concurrently on different arguments.">work</a> and execution follows the ThreadPool design pattern. </p><dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Key</td><td>Argument type of the concurrent <a class="el" href="classMultithreaded.xhtml#a295f1db64506dc4054dc5d7bac9ba231" title="Function that should be executed concurrently on different arguments.">work</a> function. </td></tr>
    <tr><td class="paramname">T</td><td>Result type of the concurrent <a class="el" href="classMultithreaded.xhtml#a295f1db64506dc4054dc5d7bac9ba231" title="Function that should be executed concurrently on different arguments.">work</a> function. </td></tr>
    <tr><td class="paramname">Compare</td><td>Comparison for objects of type Key. </td></tr>
    <tr><td class="paramname">Allocator</td><td>Allocator for pairs of constant Key and T.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section author"><dt>Author</dt><dd>Per Natzschka </dd></dl>

<p class="definition">Definition at line <a class="el" href="Multithreaded_8h_source.xhtml#l00027">27</a> of file <a class="el" href="Multithreaded_8h_source.xhtml">Multithreaded.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="abb856a33aad9a1cc76a91c15c40bef8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb856a33aad9a1cc76a91c15c40bef8e">&#9670;&nbsp;</a></span>Multithreaded()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key , class T , class Compare , class Allocator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMultithreaded.xhtml">Multithreaded</a>&lt; Key, T, Compare, Allocator &gt;::<a class="el" href="classMultithreaded.xhtml">Multithreaded</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>threads</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classMultithreaded.xhtml" title="A class implementing concurrent execution of the same function for different arguments.">Multithreaded</a> class that does not use more than the given number of threads. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">threads</td><td>Maximum number of threads to use. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="Multithreaded_8tpp_source.xhtml#l00012">12</a> of file <a class="el" href="Multithreaded_8tpp_source.xhtml">Multithreaded.tpp</a>.</p>

<p class="reference">References <a class="el" href="classMultithreaded.xhtml#af49cb7239ee452d7c1d29ae50fe482a3">Multithreaded&lt; Key, T, Compare, Allocator &gt;::NR_THREADS</a>.</p>

<p class="reference">Referenced by <a class="el" href="classSimulationRunner.xhtml#a2a41b4b74ffb111ede54937551266a53">SimulationRunner::SimulationRunner()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a417daf5d214dc7046af294dba9979624"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a417daf5d214dc7046af294dba9979624">&#9670;&nbsp;</a></span>multithreadFunction()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key , class T , class Compare , class Allocator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt; Key, T, Compare, Allocator &gt; <a class="el" href="classMultithreaded.xhtml">Multithreaded</a>&lt; Key, T, Compare, Allocator &gt;::multithreadFunction</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function that is executed by each thread. </p>
<p>As long as <a class="el" href="classMultithreaded.xhtml#af18b358906f0dd910122e6541c46f45e" title="ThreadsafeQueue containing the arguments that have to be processed by the ThreadPool.">queue</a> is not empty, tasks are started. When <a class="el" href="classMultithreaded.xhtml#af18b358906f0dd910122e6541c46f45e" title="ThreadsafeQueue containing the arguments that have to be processed by the ThreadPool.">queue</a> is empty, the processed results are returned </p><dl class="section return"><dt>Returns</dt><dd>A map which maps arguments to their respective calculated values. </dd></dl>

<p class="definition">Definition at line <a class="el" href="Multithreaded_8tpp_source.xhtml#l00036">36</a> of file <a class="el" href="Multithreaded_8tpp_source.xhtml">Multithreaded.tpp</a>.</p>

<p class="reference">References <a class="el" href="classMultithreaded.xhtml#af18b358906f0dd910122e6541c46f45e">Multithreaded&lt; Key, T, Compare, Allocator &gt;::queue</a>, and <a class="el" href="classMultithreaded.xhtml#a295f1db64506dc4054dc5d7bac9ba231">Multithreaded&lt; Key, T, Compare, Allocator &gt;::work()</a>.</p>

<p class="reference">Referenced by <a class="el" href="classMultithreaded.xhtml#a1fcc1c0642faa664e11fefadde148b5f">Multithreaded&lt; Key, T, Compare, Allocator &gt;::runMultithreadedFunctions()</a>.</p>

</div>
</div>
<a id="a1fcc1c0642faa664e11fefadde148b5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fcc1c0642faa664e11fefadde148b5f">&#9670;&nbsp;</a></span>runMultithreadedFunctions()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key , class T , class Compare , class Allocator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt; Key, T, Compare, Allocator &gt; <a class="el" href="classMultithreaded.xhtml">Multithreaded</a>&lt; Key, T, Compare, Allocator &gt;::runMultithreadedFunctions </td>
          <td>(</td>
          <td class="paramtype">std::set&lt; Key, Compare &gt;&#160;</td>
          <td class="paramname"><em>runs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Pushes given tasks into <a class="el" href="classMultithreaded.xhtml#af18b358906f0dd910122e6541c46f45e" title="ThreadsafeQueue containing the arguments that have to be processed by the ThreadPool.">queue</a>, creates concurrent threads and merges them when execution is done. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">runs</td><td>Set of arguments on which <a class="el" href="classMultithreaded.xhtml#a295f1db64506dc4054dc5d7bac9ba231" title="Function that should be executed concurrently on different arguments.">work</a> should to be executed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A map which maps arguments to their respective calculated values. </dd></dl>

<p class="definition">Definition at line <a class="el" href="Multithreaded_8tpp_source.xhtml#l00017">17</a> of file <a class="el" href="Multithreaded_8tpp_source.xhtml">Multithreaded.tpp</a>.</p>

<p class="reference">References <a class="el" href="classMultithreaded.xhtml#a417daf5d214dc7046af294dba9979624">Multithreaded&lt; Key, T, Compare, Allocator &gt;::multithreadFunction()</a>, <a class="el" href="classMultithreaded.xhtml#af49cb7239ee452d7c1d29ae50fe482a3">Multithreaded&lt; Key, T, Compare, Allocator &gt;::NR_THREADS</a>, and <a class="el" href="classMultithreaded.xhtml#af18b358906f0dd910122e6541c46f45e">Multithreaded&lt; Key, T, Compare, Allocator &gt;::queue</a>.</p>

<p class="reference">Referenced by <a class="el" href="classSimulationRunner.xhtml#a37f73e47fd21b1167be2c44ab36e6254">SimulationRunner::runSimulations()</a>.</p>

</div>
</div>
<a id="a295f1db64506dc4054dc5d7bac9ba231"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a295f1db64506dc4054dc5d7bac9ba231">&#9670;&nbsp;</a></span>work()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key , class T , class Compare  = std::less&lt;Key&gt;, class Allocator  = std::allocator&lt;std::pair&lt;const Key, T&gt;&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual T <a class="el" href="classMultithreaded.xhtml">Multithreaded</a>&lt; Key, T, Compare, Allocator &gt;::work </td>
          <td>(</td>
          <td class="paramtype">Key&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function that should be executed concurrently on different arguments. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">arg</td><td>Argument of the concurrently executed function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Return value of the concurrently executed function. </dd></dl>

<p>Implemented in <a class="el" href="classSimulationRunner.xhtml#adfe03a3ba517b5aca991dee71155bbec">SimulationRunner</a>, and <a class="el" href="classPlexeSimulationRunner.xhtml#aa8dee29e4f5cc5566690d10f5d4d95a0">PlexeSimulationRunner</a>.</p>

<p class="reference">Referenced by <a class="el" href="classMultithreaded.xhtml#a417daf5d214dc7046af294dba9979624">Multithreaded&lt; Key, T, Compare, Allocator &gt;::multithreadFunction()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="af49cb7239ee452d7c1d29ae50fe482a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af49cb7239ee452d7c1d29ae50fe482a3">&#9670;&nbsp;</a></span>NR_THREADS</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key , class T , class Compare  = std::less&lt;Key&gt;, class Allocator  = std::allocator&lt;std::pair&lt;const Key, T&gt;&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const unsigned int <a class="el" href="classMultithreaded.xhtml">Multithreaded</a>&lt; Key, T, Compare, Allocator &gt;::NR_THREADS</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Maximum number of concurrent threads to be used in ThreadPool. </p>

<p class="definition">Definition at line <a class="el" href="Multithreaded_8h_source.xhtml#l00040">40</a> of file <a class="el" href="Multithreaded_8h_source.xhtml">Multithreaded.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="classMultithreaded.xhtml#abb856a33aad9a1cc76a91c15c40bef8e">Multithreaded&lt; Key, T, Compare, Allocator &gt;::Multithreaded()</a>, and <a class="el" href="classMultithreaded.xhtml#a1fcc1c0642faa664e11fefadde148b5f">Multithreaded&lt; Key, T, Compare, Allocator &gt;::runMultithreadedFunctions()</a>.</p>

</div>
</div>
<a id="af18b358906f0dd910122e6541c46f45e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af18b358906f0dd910122e6541c46f45e">&#9670;&nbsp;</a></span>queue</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key , class T , class Compare  = std::less&lt;Key&gt;, class Allocator  = std::allocator&lt;std::pair&lt;const Key, T&gt;&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classThreadsafeQueue.xhtml">ThreadsafeQueue</a>&lt;Key&gt; <a class="el" href="classMultithreaded.xhtml">Multithreaded</a>&lt; Key, T, Compare, Allocator &gt;::queue</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classThreadsafeQueue.xhtml" title="A container class of a queue that is safe for concurrent access of different threads.">ThreadsafeQueue</a> containing the arguments that have to be processed by the ThreadPool. </p>

<p class="definition">Definition at line <a class="el" href="Multithreaded_8h_source.xhtml#l00044">44</a> of file <a class="el" href="Multithreaded_8h_source.xhtml">Multithreaded.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="classMultithreaded.xhtml#a417daf5d214dc7046af294dba9979624">Multithreaded&lt; Key, T, Compare, Allocator &gt;::multithreadFunction()</a>, and <a class="el" href="classMultithreaded.xhtml#a1fcc1c0642faa664e11fefadde148b5f">Multithreaded&lt; Key, T, Compare, Allocator &gt;::runMultithreadedFunctions()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Simopticon/Simopticon/src/utils/<a class="el" href="Multithreaded_8h_source.xhtml">Multithreaded.h</a></li>
<li>/home/runner/work/Simopticon/Simopticon/src/utils/<a class="el" href="Multithreaded_8tpp_source.xhtml">Multithreaded.tpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="classMultithreaded.xhtml">Multithreaded</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
